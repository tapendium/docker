schemaVersion: "2.0.0"

commandTests:
  # check the cfn-lint binary is in the correct location
  - name: "cfn-lint installation"
    command: "which"
    args: ["cfn-lint"]
    expectedOutput: ["/usr/local/bin/cfn-lint"]

  # check the cfn-lint version is the correct version
  - name: "cfn-lint version"
    command: "cfn-lint"
    args: ["-v"]
    expectedOutput: [".*1.*"]

  # check the cfn-lint run on a file
  - name: "cfn-lint run on json file"
    # yamllint disable rule:line-length
    setup:
      [
        ["echo", "outputing file"],
        ["touch", "/tmp/Output.json"],
        ["echo", '{"Resources":{"ApiGWLoggingRole":{"Type":"AWS::IAM::Role","Properties":{"RoleName":"apigw-logs-role","Description":"Api Gateway logging iam role","AssumeRolePolicyDocument":{"Statement":[{"Effect":"Allow","Principal":{"Service":"apigateway.amazonaws.com"},"Action":"sts:AssumeRole"}]},"ManagedPolicyArns":["arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"]}},"ApiGWAccount":{"Type":"AWS::ApiGateway::Account","Properties":{"CloudWatchRoleArn":{"Fn::GetAtt":["ApiGWLoggingRole","Arn"]}}}}}', ">>", "/tmp/Output.json"],
        ["echo", "checking file"],
        ["cat", "/tmp/Output.json"]
      ]
    # yamllint enable rule:line-length
    command: "cfn-lint"
    args: ["-t", "/tmp/Output.json"]
    expectedOutput: [""]

  # check that image builds for the right architecture
  - name: "architecture check"
    command: "uname"
    args: ["-m"]
    expectedOutput: ["aarch64"]
